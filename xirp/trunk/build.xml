<?xml version="1.0" encoding="utf-8"?>
<!-- ====================================================================== -->
<!-- Ant build file (http://ant.apache.org/) for Ant 1.6.2 or above.        -->
<!-- ====================================================================== -->
<project name="%PROJECT_ARTIFACTID%" default="jar" basedir=".">
	<!-- ====================================================================== -->
	<!-- Import maven-build.xml into the current project                        -->
	<!-- ====================================================================== -->
	<import file="maven-build.xml" />
	<typedef classpath="${maven.repo.local}\ant-contrib\ant-contrib\1.0b2\ant-contrib-1.0b2.jar" resource="net/sf/antcontrib/antlib.xml" />
	<taskdef name="izpack" classpath="${basedir}/ant/standalone-compiler.jar" classname="com.izforge.izpack.ant.IzPackTask" />
	<property name="deploy" location="${maven.build.dir}" />
	<property name="languages" location="${deploy}/languages" />
	<property name="dist" location="dist-files" />
	<property name="compile.debug" value="true" />
	<property name="error.file" location="${basedir}/errors.txt" />
	<property name="version.class" location="${src}/de/xirp/util/Version.java" />
	<property name="guides" location="${deploy}/doc/guides" />
	<property name="dev.guide.url" value="http://developer.berlios.de/docman/display_doc.php?docid=1711&amp;group_id=8442" />
	<property name="usr.guide.url" value="http://developer.berlios.de/docman/display_doc.php?docid=1710&amp;group_id=8442" />
	
	<!-- ====================================================================== -->
	<!-- Help target                                                            -->
	<!-- ====================================================================== -->
	<target name="help">
		<echo message="Please run: $ant -projecthelp" />
	</target>
	
	<target name="buildLanguageJars" description="Creates jars for each language">
		<mkdir dir="${languages}" />
		<!-- iterate over all messages_*.properties which stand for a language in the
                    application -->
		<for param="file">
			<path>
				<fileset dir="${maven.build.resourceDir.0}/de/xirp/util">
					<include name="messages*.properties" />
				</fileset>
			</path>
			<!-- Iterate over the properties files and create the jars -->
			<sequential>
				<!-- extract the language from the filename -->
				<propertyregex override="yes" property="language" input="@{file}" regexp="(.*)[\\/]messages_(.*).properties" replace="\2" />
				<!-- extract the name of the properties file without the package -->
				<propertyregex override="yes" property="include" input="@{file}" regexp="(.*)[\\/](.*)" replace="\2" />
				<echo message="Creating language jar for locale: ${language} from file: @{file}" />
				<!-- only include the properties file of the current language in the jar file -->
				<jar destfile="${languages}/language_${language}.jar" basedir="${maven.build.resourceDir.0}/de/xirp/util" includes="${include}" />
			</sequential>
		</for>
	</target>
	
	<target name="prepLanguage">
		<for param="file">
			<path>
				<fileset dir="${languages}">
					<include name="language_*.jar" />
				</fileset>
			</path>
			<!-- Iterate over the properties files and create the jars -->
			<sequential>
				<!-- extract the language from the filename -->
				<propertyregex override="yes" property="language" input="@{file}" regexp="(.*)[\\/]language_(.*).jar" replace="\2" />
				<echo message="Found language jar for locale: ${language} from file: @{file}" />
				<!-- add the language jar as a pack to the installer -->
				<!-- english is a required language pack -->
				<if>
					<equals arg1="${language}" arg2="en" casesensitive="false" />
					<then>
						<replace file="${deploy}/install.xml" token="@LANGUAGE@">
							<replacevalue>
								<![CDATA[<pack name="Languagepack: @LANGUAGENAME@" required="yes">
									<description>Enables the GUI to be displayed in @LANGUAGENAME@</description>
									<file targetdir="$INSTALL_PATH/languages" src="@LANGUAGEJAR@"/>
								</pack>
                             @LANGUAGE@]]>
							</replacevalue>
						</replace>
					</then>
					<!-- other language packs are optional -->
					<else>
						<replace file="${deploy}/install.xml" token="@LANGUAGE@">
							<replacevalue>
								<![CDATA[<pack name="Languagepack: @LANGUAGENAME@" required="no">
										<description>Enables the GUI to be displayed in @LANGUAGENAME@</description>
										<file targetdir="$INSTALL_PATH/languages" src="@LANGUAGEJAR@"/>
									</pack>
								 @LANGUAGE@]]>
							</replacevalue>
						</replace>
					</else>
				</if>
				<!-- replace the placeholders of the pack -->
				<replace file="${deploy}/install.xml" token="@LANGUAGENAME@" value="###${language}###" />
				<replace file="${deploy}/install.xml" token="@LANGUAGEJAR@" value="${deploy}/languages/language_${language}.jar" />
			</sequential>
		</for>
		<!-- Translate the language tags like en to english because the installer
                    should display real names for the languages -->
		<translate toDir="${deploy}/translated" starttoken="###" endtoken="###" bundle="${deploy}/language" bundlelanguage="en" forceoverwrite="yes">
			<fileset dir="${deploy}">
				<include name="**/install.xml" />
			</fileset>
		</translate>
	</target>
								
	<target name="-getUsrGuide" unless="usr.guide.present">
		<get src="${usr.guide.url}" dest="${guides}/user.pdf" usetimestamp="true" ignoreerrors="true" />
	</target>
								
	<target name="-getDevGuide" unless="dev.guide.present">
		<get src="${dev.guide.url}" dest="${guides}/developer.pdf" usetimestamp="true" ignoreerrors="true" />
	</target>
								
	<target name="getGuides">
		<mkdir dir="${deploy}/doc/guides" />
		<available file="${guides}/developer.pdf" property="dev.guide.present" />
		<available file="${guides}/user.pdf" property="usr.guide.present" />
		<echo message="Developer Guide found: ${dev.guide.present}" />
		<echo message="User Guide found: ${usr.guide.present}" />
		<antcall target="-getUsrGuide" />
		<antcall target="-getDevGuide" />
	</target>
								
	<target name="makeInstaller" depends="getGuides" description="Creates an installer.">
		<!-- copy all files needed for the installer (like pictures) to the
                            deploy folder -->
		<copy todir="${deploy}">
			<fileset dir="${dist}" includes="*" excludes="install.xml*" />
		</copy>
		<!-- copy the installer template to a real installer file on which we can work on -->
		<copy tofile="${deploy}/install.xml" file="${dist}/install.xml.tmpl" overwrite="true" />
		<antcall target="prepLanguage" />
		<copy tofile="${deploy}/install.xml" file="${deploy}/translated/install.xml" overwrite="true" />
		
		<propertyregex override="yes" property="major.number" input="${project.version}" regexp="(\d*)(.*)" replace="\1" />
		<!-- create the startup scripts for the os -->
		<replaceregexp file="${deploy}/xirp.bat" match="java(.*)" replace="java -Djava.library.path=lib/dll -Xms256M -Xmx512M -jar ${maven.build.finalName}.jar" byline="true" />
		<replaceregexp file="${deploy}/xirp.sh" match="java(.*)" replace="java -Djava.library.path=lib/so -Xms256M -Xmx512M -jar ${maven.build.finalName}.jar" byline="true" />
		<!-- replace all placeholders in the install and shortcut config files -->
		<replace file="${deploy}/install.xml" token="@VERSION@" value="${project.version}" summary="yes" />
		<replace file="${deploy}/install.xml" token="@JARNAME@" value="${maven.build.finalName}.jar" summary="yes" />
		<replace file="${deploy}/install-readme.html" token="@VERSION@" value="${project.version}" summary="yes" />
		<replace file="${deploy}/shortcutSpec.xml" token="@VERSION@" value="${major.number}" summary="yes" />
		<replace file="${deploy}/shortcutSpec.xml" token="@JARNAME@" value="${maven.build.finalName}.jar" summary="yes" />
		<replace file="${deploy}/Unix_shortcutSpec.xml" token="@VERSION@" value="${major.number}" summary="yes" />
		<replace file="${deploy}/Unix_shortcutSpec.xml" token="@JARNAME@" value="${maven.build.finalName}.jar" summary="yes" />
		<!-- Call IzPack -->
		<echo message="Makes the installer using IzPack" />
		<izpack input="${deploy}/install.xml" output="${deploy}/${maven.build.finalName}_Setup.jar" installerType="standard" basedir="${deploy}" />
		<chmod file="${deploy}/${maven.build.finalName}_Setup.jar" perm="700" />
	</target>
	
	<target name="manifest">
		<fileset id="lib.files" dir="${deploy}/lib">
					<include name="*.jar"/>
					<include name="linux/**/*.jar"/>
					<include name="windows/**/*.jar"/>
				</fileset>
		
		<pathconvert pathsep=" " property="jarfiles" refid="lib.files">
					<chainedmapper>
						<!-- Linux systems need forward slash -->
						<regexpmapper from="(.*)[//\\]lib[//\\](.*)"
							to="lib\/\2"/>
						<filtermapper>
						  <replacestring from="\" to="/"/>
						</filtermapper>
					</chainedmapper>
				</pathconvert>
		
		<manifest file="${deploy}/MANIFEST.MF" mode="replace">
			<attribute name="Built-By" value="${user.name}"/>
			<attribute name="Main-Class"
						value="de.xirp.Xirp"/>
			<attribute name="Class-Path" value="${jarfiles}"/>
			<attribute name="Build-Jdk"
				value="${java.specification.version}"/>
			<attribute name="Specification-Title"
			value="${project.name}"/>
			<attribute name="Specification-Version"
			value="${project.version}"/>
			<attribute name="Implementation-Title"
			value="${project.name}"/>
			<attribute name="Implementation-Version"
			value="${project.version}"/>
			<attribute name="Implementation-Vendor-Id"
			value="${project.name}"/>
		</manifest>
	</target>			
</project>